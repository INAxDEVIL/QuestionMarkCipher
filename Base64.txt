import android.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

public class EncryptionUtils {
    private static final String AES_MODE = "AES/CBC/PKCS7Padding";
    private static final String AES_SECRET_KEY = "YourSecretKey"; // Replace with your own secret key
    private static final String AES_IV = "YourInitializationVector"; // Replace with your own initialization vector

    public static String encrypt(String input) throws Exception {
        Cipher cipher = Cipher.getInstance(AES_MODE);
        SecretKeySpec secretKey = new SecretKeySpec(AES_SECRET_KEY.getBytes("UTF-8"), "AES");
        IvParameterSpec iv = new IvParameterSpec(AES_IV.getBytes("UTF-8"));
        cipher.init(Cipher.ENCRYPT_MODE, secretKey, iv);

        byte[] encryptedBytes = cipher.doFinal(input.getBytes("UTF-8"));
        return Base64.encodeToString(encryptedBytes, Base64.DEFAULT);
    }

    public static String decrypt(String input) throws Exception {
        Cipher cipher = Cipher.getInstance(AES_MODE);
        SecretKeySpec secretKey = new SecretKeySpec(AES_SECRET_KEY.getBytes("UTF-8"), "AES");
        IvParameterSpec iv = new IvParameterSpec(AES_IV.getBytes("UTF-8"));
        cipher.init(Cipher.DECRYPT_MODE, secretKey, iv);

        byte[] encryptedBytes = Base64.decode(input, Base64.DEFAULT);
        byte[] decryptedBytes = cipher.doFinal(encryptedBytes);
        return new String(decryptedBytes, "UTF-8");
    }

    public static void main(String[] args) {
        try {
            String plaintext = "Hello, World!";
            String encryptedText = encrypt(plaintext);
            System.out.println("Encrypted Text: " + encryptedText);
            String decryptedText = decrypt(encryptedText);
            System.out.println("Decrypted Text: " + decryptedText);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
